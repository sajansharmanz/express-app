openapi: 3.0.0
info:
    title: API
    description: "API endpoints for platform"
    version: 1.0.0
servers:
    - url: http://localhost:3000/api
      description: Local dev server
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        id:
            type: string
            example: ch72gsb320000udocl363eofy
        email:
            type: string
            example: "test@example.com"
        password:
            type: string
            example: "Test@example123"
        token:
            type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        errorWithField:
            type: object
            properties:
                message:
                    type: string
                    example: "Invalid password"
                field:
                    type: string
                    example: "password"
        errorWithoutField:
            type: object
            properties:
                message:
                    type: string
                    example: "Invalid password"
        GeneralError:
            description: "General error"
            content:
                application/json:
                    schema:
                        type: array
                    items:
                        $ref: "#/components/schemas/errorWithoutField"
        NotFoundError:
            description: "Endpoint not found error"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "The request POST /paththatdoesnotexist/ was not found"
        InternalServerError:
            description: "Internal server error"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Internal server error"
        ValidationErrors:
            description: "Validation errors"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: "#/components/schemas/errorWithField"
        AuthenticationError:
            description: "Authentication error"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Authentication Error"
        AccountLockedError:
            description: "Account locked"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Account locked"
        InvalidTokenError:
            description: "Invalid Token"
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: object
                            properties:
                                message:
                                    type: string
                                    example: "Please login to continue"
        createUser:
            type: object
            properties:
                email:
                    $ref: "#/components/schemas/email"
                password:
                    $ref: "#/components/schemas/password"
                deviceInfo:
                    properties:
                        name:
                            type: string
                            example: "Jane Doe's iPhone"
                        model:
                            type: string
                            example: "iPhone 14"
                        platform:
                            type: string
                            example: "ios"
                        os:
                            type: string
                            example: "ios"
                        osVersion:
                            type: string
                            example: "16"
                        manufacturer:
                            type: string
                            example: "Apple Inc"
                    required:
                        - name
                        - model
                        - platform
                        - os
                        - osVersion
                        - manufacturer
        userAndToken:
            type: object
            properties:
                user:
                    type: object
                    properties:
                        id:
                            $ref: "#/components/schemas/id"
                        email:
                            $ref: "#/components/schemas/email"
                        failedLoginAttempts:
                            type: integer
                            example: 0
                        status:
                            type: string
                            example: "ENABLED"
                        createdAt:
                            type: string
                            example: "2022-10-14T17:11:33.594Z"
                        updatedAt:
                            type: string
                            example: "2022-10-14T17:11:33.594Z"
                token:
                    $ref: "#/components/schemas/token"
        login:
            type: object
            properties:
                email:
                    $ref: "#/components/schemas/email"
                password:
                    $ref: "#/components/schemas/password"
        updateMe:
            type: object
            properties:
                email:
                    $ref: "#/components/schemas/email"
                password:
                    $ref: "#/components/schemas/email"
                status:
                    type: string
                    example: "ENABLED"
paths:
    /user/signup:
        post:
            summary: Sign up user
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/createUser"
            responses:
                "201":
                    description: "User created successfully"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/userAndToken"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "400":
                    $ref: "#/components/schemas/ValidationErrors"
    /user/login:
        post:
            summary: Login user
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/login"
            responses:
                "200":
                    description: "Login successful"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/userAndToken"
                "500":
                    $ref: "#components/schemas/InternalServerError"
                "401 (1)":
                    $ref: "#/components/schemas/AuthenticationError"
                "401 (2)":
                    $ref: "#/components/schemas/AccountLockedError"
    /user/logout:
        post:
            summary: "Logout single device"
            tags:
                - User
            security:
                - bearerAuth: []
            responses:
                "204":
                    description: "Logout successful"
                "401":
                    $ref: "#components/schemas/InvalidTokenError"
    /user/logoutAll:
        post:
            summary: "Logout all devices"
            tags:
                - User
            security:
                - bearerAuth: []
            responses:
                "204":
                    description: "Logout successful"
                "401":
                    $ref: "#components/schemas/InvalidTokenError"
    /user/me:
        patch:
            summary: "Update user"
            description: "Body params are all optional"
            tags:
                - User
            security:
                - bearerAuth: []
            requestBody:
                required: false
                content:
                    application/json:
                        schema:
                            $ref: "#components/schemas/updateMe"
            responses:
                "200":
                    description: "Update successful"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/userAndToken"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "400":
                    $ref: "#/components/schemas/ValidationErrors"

        get:
            summary: "Get user"
            tags:
                - User
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: "Get successful"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/userAndToken"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "401":
                    $ref: "#/components/schemas/InvalidTokenError"
        delete:
            summary: "Delete user"
            tags:
                - User
            security:
                - bearerAuth: []
            responses:
                "204":
                    description: "Delete successful"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "401":
                    $ref: "#/components/schemas/InvalidTokenError"
    /user/forgotpassword:
        post:
            summary: "Forgot password"
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    $ref: "#/components/schemas/email"
            responses:
                "204":
                    description: "Forgot password successful"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "400":
                    $ref: "#/components/schemas/ValidationErrors"
    /user/resetpassword:
        post:
            summary: "Reset password"
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                password:
                                    $ref: "#/components/schemas/password"
                                token:
                                    $ref: "#/components/schemas/token"
            responses:
                "204":
                    description: "Reset password successful"
                "500":
                    $ref: "#/components/schemas/InternalServerError"
                "400":
                    $ref: "#/components/schemas/ValidationErrors"
